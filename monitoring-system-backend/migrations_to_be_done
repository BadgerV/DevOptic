SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: checks; Type: TABLE; Schema: public; Owner: monitor
--

CREATE TABLE public.checks (
    id integer NOT NULL,
    endpoint_id integer NOT NULL,
    status_code integer,
    latency_ms integer,
    error text,
    checked_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.checks OWNER TO monitor;

--
-- Name: checks_id_seq; Type: SEQUENCE; Schema: public; Owner: monitor
--

CREATE SEQUENCE public.checks_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.checks_id_seq OWNER TO monitor;

--
-- Name: checks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: monitor
--

ALTER SEQUENCE public.checks_id_seq OWNED BY public.checks.id;


--
-- Name: endpoint_info; Type: TABLE; Schema: public; Owner: monitor
--

CREATE TABLE public.endpoint_info (
    id integer NOT NULL,
    endpoint_id integer,
    gitlab_url text,
    docker_container_name text,
    kubernetes_pod_name text,
    tags text[],
    description text,
    has_been_modified boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    last_changed_by text
);


ALTER TABLE public.endpoint_info OWNER TO monitor;

--
-- Name: endpoint_info_id_seq; Type: SEQUENCE; Schema: public; Owner: monitor
--

CREATE SEQUENCE public.endpoint_info_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.endpoint_info_id_seq OWNER TO monitor;

--
-- Name: endpoint_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: monitor
--

ALTER SEQUENCE public.endpoint_info_id_seq OWNED BY public.endpoint_info.id;


--
-- Name: endpoint_stats; Type: TABLE; Schema: public; Owner: monitor
--

CREATE TABLE public.endpoint_stats (
    endpoint_id integer NOT NULL,
    total_checks bigint DEFAULT 0 NOT NULL,
    total_latency bigint DEFAULT 0 NOT NULL,
    avg_latency numeric(10,2) GENERATED ALWAYS AS (
CASE
    WHEN (total_checks > 0) THEN ((total_latency)::numeric / (total_checks)::numeric)
    ELSE (0)::numeric
END) STORED,
    successful_checks bigint DEFAULT 0 NOT NULL,
    uptime_percentage numeric(5,2) GENERATED ALWAYS AS (
CASE
    WHEN (total_checks > 0) THEN (((successful_checks)::numeric / (total_checks)::numeric) * (100)::numeric)
    ELSE (0)::numeric
END) STORED
);


ALTER TABLE public.endpoint_stats OWNER TO monitor;

--
-- Name: endpoints; Type: TABLE; Schema: public; Owner: monitor
--

CREATE TABLE public.endpoints (
    id integer NOT NULL,
    service_name text NOT NULL,
    url text NOT NULL,
    server_name text NOT NULL,
    api_method text NOT NULL,
    expected_status_code integer DEFAULT 200 NOT NULL
);


ALTER TABLE public.endpoints OWNER TO monitor;

--
-- Name: endpoints_id_seq; Type: SEQUENCE; Schema: public; Owner: monitor
--

CREATE SEQUENCE public.endpoints_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.endpoints_id_seq OWNER TO monitor;

--
-- Name: endpoints_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: monitor
--

ALTER SEQUENCE public.endpoints_id_seq OWNED BY public.endpoints.id;


--
-- Name: checks id; Type: DEFAULT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.checks ALTER COLUMN id SET DEFAULT nextval('public.checks_id_seq'::regclass);


--
-- Name: endpoint_info id; Type: DEFAULT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_info ALTER COLUMN id SET DEFAULT nextval('public.endpoint_info_id_seq'::regclass);


--
-- Name: endpoints id; Type: DEFAULT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoints ALTER COLUMN id SET DEFAULT nextval('public.endpoints_id_seq'::regclass);


--
-- Name: checks checks_pkey; Type: CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.checks
    ADD CONSTRAINT checks_pkey PRIMARY KEY (id);


--
-- Name: endpoint_info endpoint_info_endpoint_id_key; Type: CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_info
    ADD CONSTRAINT endpoint_info_endpoint_id_key UNIQUE (endpoint_id);


--
-- Name: endpoint_info endpoint_info_pkey; Type: CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_info
    ADD CONSTRAINT endpoint_info_pkey PRIMARY KEY (id);


--
-- Name: endpoint_stats endpoint_stats_pkey; Type: CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_stats
    ADD CONSTRAINT endpoint_stats_pkey PRIMARY KEY (endpoint_id);


--
-- Name: endpoints endpoints_pkey; Type: CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoints
    ADD CONSTRAINT endpoints_pkey PRIMARY KEY (id);


--
-- Name: checks checks_endpoint_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.checks
    ADD CONSTRAINT checks_endpoint_id_fkey FOREIGN KEY (endpoint_id) REFERENCES public.endpoints(id);


--
-- Name: endpoint_info endpoint_info_endpoint_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_info
    ADD CONSTRAINT endpoint_info_endpoint_id_fkey FOREIGN KEY (endpoint_id) REFERENCES public.endpoints(id) ON DELETE CASCADE;


--
-- Name: endpoint_stats endpoint_stats_endpoint_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: monitor
--

ALTER TABLE ONLY public.endpoint_stats
    ADD CONSTRAINT endpoint_stats_endpoint_id_fkey FOREIGN KEY (endpoint_id) REFERENCES public.endpoints(id);


--
-- PostgreSQL database dump complete
--
