
CREATE TABLE endpoints (
    id SERIAL PRIMARY KEY,
    service_name TEXT NOT NULL,
    url TEXT NOT NULL,
    server_name TEXT NOT NULL,
    api_method TEXT NOT NULL
    );

-- Separate table for additional endpoint information
CREATE TABLE endpoint_info (
    id SERIAL PRIMARY KEY,
    endpoint_id INTEGER REFERENCES endpoints(id) ON DELETE CASCADE,
    gitlab_url TEXT,
    docker_container_name TEXT,
    kubernetes_pod_name TEXT,
    tags TEXT[],
    description TEXT,
    modified BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(endpoint_id) -- Ensures one-to-one relationship
);

    ALTER TABLE endpoint_info
    RENAME COLUMN modified TO has_been_modified;

    ALTER TABLE endpoint_info
    ADD COLUMN changed_last_by TEXT;

    ALTER TABLE endpoint_info
    RENAME COLUMN changed_last_by TO last_changed_by;


CREATE TABLE checks (
    id SERIAL PRIMARY KEY,
    endpoint_id INT NOT NULL REFERENCES endpoints(id),
    status_code INT,
    latency_ms INT,
    error TEXT,
    checked_at TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE endpoint_stats (
    endpoint_id INT PRIMARY KEY REFERENCES endpoints(id),
    total_checks BIGINT NOT NULL DEFAULT 0,
    total_latency BIGINT NOT NULL DEFAULT 0,
    avg_latency NUMERIC(10,2) GENERATED ALWAYS AS (
        CASE WHEN total_checks > 0 THEN total_latency::NUMERIC / total_checks ELSE 0 END
    ) STORED
);
